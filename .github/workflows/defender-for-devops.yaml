# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Microsoft Security DevOps (MSDO) is a command line application which integrates static analysis tools into the development cycle.
# MSDO installs, configures and runs the latest versions of static analysis tools
# (including, but not limited to, SDL/security and compliance tools).
#
# The Microsoft Security DevOps action is currently in beta and runs on the windows-latest queue,
# as well as Windows self hosted agents. ubuntu-latest support coming soon.
#
# For more information about the action , check out https://github.com/microsoft/security-devops-action
#
# Please note this workflow do not integrate your GitHub Org with Microsoft Defender For DevOps. You have to create an integration
# and provide permission before this can report data back to azure.
# Read the official documentation here : https://learn.microsoft.com/en-us/azure/defender-for-cloud/quickstart-onboard-github

name: "Microsoft Defender For Devops"

on:
  schedule:
    - cron: '38 8 * * 3'

# Top-level permissions
permissions:
  actions: read
  contents: read

jobs:
  MSDO:
    runs-on: cps-ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write    
    steps:
       # Checkout your code repository to scan
    - uses: actions/checkout@v4
       # Run analyzers
    - name: Run Microsoft Security DevOps Analysis
      uses: microsoft/security-devops-action@v1
      id: msdo      
      with: 
        tools: checkov, terrascan, trivy
       # Upload alerts to the Security tab
    - name: Upload alerts to Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
       sarif_file: ${{ steps.msdo.outputs.sarifFile }}
       # Upload alerts file as a workflow artifact
    - name: Upload alerts file as a workflow artifact
      uses: actions/upload-artifact@v4
      with:  
       name: alerts
       path: ${{ steps.msdo.outputs.sarifFile }}