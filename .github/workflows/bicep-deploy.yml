name: 'Bicep Deploy'

# Allow run manually
on:
  workflow_dispatch:
    inputs:
      enable_debug_mode:
        type: boolean
        description: 'Whether debug mode should be enable for within the script'
        default: false
      subscription_id:
        type: string
        description: 'Name of the Subscription Id to deploy resources and manage the Deployment Stack'
        default: '6337e168-4a9a-4871-bbb2-b7ab67de13c5'
      stack_name:
        type: string
        description: 'Name of the stack to deploy.'
        default: 'network'

jobs:
  run-script:
    name: 'Run Script'
    runs-on: cps-ubuntu-latest

    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v4

      - name: Install PowerShell modules
        id: install-powershell-modules
        shell: pwsh
        run: |
          pwsh -Command Install-Module -Name Az.Resources -Force -AllowClobber -Scope CurrentUser -Repository PSGallery ;

      - name: Log in to Azure with Federated Identity
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ inputs.subscription_id }}
          enable-AzPSSession: true

      - name: Deploy
        id: run-script
        shell: pwsh
        run: |
          function Convert-ToBoolean($value)
            {
                $valueLower = $value.ToLower()
                if ($valueLower -eq "true")
                {
                    return $true
                }
                elseif ($valueLower -eq "false")
                {
                    return $false
                }
                else
                {
                    throw "[$( $MyInvocation.MyCommand.Name )] Error: Invalid value - $value. Exiting."
                    exit 1
                }
            }
          
          $DebugMode = Convert-ToBoolean ${{ inputs.enable_debug_mode }}
          
          .\Run-AzBicep.ps1 `
            -RunBicepWhatIf true `
            -RunBicepWhatIfDestroy false `
            -RunBicepDeploy true `
            -RunBicepDestroy false `
            -StackName ${{ inputs.stack_name }} `
            -DebugMode $DebugMode